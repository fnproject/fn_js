/**
 * fn
 * The open source serverless platform.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FnJs);
  }
}(this, function(expect, FnJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FnJs.StatMetrics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StatMetrics', function() {
    it('should create an instance of StatMetrics', function() {
      // uncomment below and update the code to test StatMetrics
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be.a(FnJs.StatMetrics);
    });

    it('should have the property netRx (base name: "net_rx")', function() {
      // uncomment below and update the code to test the property netRx
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property netTx (base name: "net_tx")', function() {
      // uncomment below and update the code to test the property netTx
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property memLimit (base name: "mem_limit")', function() {
      // uncomment below and update the code to test the property memLimit
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property memUsage (base name: "mem_usage")', function() {
      // uncomment below and update the code to test the property memUsage
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property diskRead (base name: "disk_read")', function() {
      // uncomment below and update the code to test the property diskRead
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property diskWrite (base name: "disk_write")', function() {
      // uncomment below and update the code to test the property diskWrite
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property cpuUser (base name: "cpu_user")', function() {
      // uncomment below and update the code to test the property cpuUser
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property cpuTotal (base name: "cpu_total")', function() {
      // uncomment below and update the code to test the property cpuTotal
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

    it('should have the property cpuKernel (base name: "cpu_kernel")', function() {
      // uncomment below and update the code to test the property cpuKernel
      //var instance = new FnJs.StatMetrics();
      //expect(instance).to.be();
    });

  });

}));

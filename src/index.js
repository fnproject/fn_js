/**
 * fn
 * The open source serverless platform.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/App', 'model/AppList', 'model/Call', 'model/CallList', 'model/Error', 'model/Fn', 'model/FnList', 'model/Log', 'model/Stat', 'model/StatMetrics', 'model/Trigger', 'model/TriggerList', 'api/AppsApi', 'api/CallApi', 'api/FnsApi', 'api/LogApi', 'api/TriggersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/App'), require('./model/AppList'), require('./model/Call'), require('./model/CallList'), require('./model/Error'), require('./model/Fn'), require('./model/FnList'), require('./model/Log'), require('./model/Stat'), require('./model/StatMetrics'), require('./model/Trigger'), require('./model/TriggerList'), require('./api/AppsApi'), require('./api/CallApi'), require('./api/FnsApi'), require('./api/LogApi'), require('./api/TriggersApi'));
  }
}(function(ApiClient, App, AppList, Call, CallList, Error, Fn, FnList, Log, Stat, StatMetrics, Trigger, TriggerList, AppsApi, CallApi, FnsApi, LogApi, TriggersApi) {
  'use strict';

  /**
   * The_open_source_serverless_platform_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var FnJs = require('index'); // See note below*.
   * var xxxSvc = new FnJs.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new FnJs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new FnJs.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new FnJs.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The App model constructor.
     * @property {module:model/App}
     */
    App: App,
    /**
     * The AppList model constructor.
     * @property {module:model/AppList}
     */
    AppList: AppList,
    /**
     * The Call model constructor.
     * @property {module:model/Call}
     */
    Call: Call,
    /**
     * The CallList model constructor.
     * @property {module:model/CallList}
     */
    CallList: CallList,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The Fn model constructor.
     * @property {module:model/Fn}
     */
    Fn: Fn,
    /**
     * The FnList model constructor.
     * @property {module:model/FnList}
     */
    FnList: FnList,
    /**
     * The Log model constructor.
     * @property {module:model/Log}
     */
    Log: Log,
    /**
     * The Stat model constructor.
     * @property {module:model/Stat}
     */
    Stat: Stat,
    /**
     * The StatMetrics model constructor.
     * @property {module:model/StatMetrics}
     */
    StatMetrics: StatMetrics,
    /**
     * The Trigger model constructor.
     * @property {module:model/Trigger}
     */
    Trigger: Trigger,
    /**
     * The TriggerList model constructor.
     * @property {module:model/TriggerList}
     */
    TriggerList: TriggerList,
    /**
     * The AppsApi service constructor.
     * @property {module:api/AppsApi}
     */
    AppsApi: AppsApi,
    /**
     * The CallApi service constructor.
     * @property {module:api/CallApi}
     */
    CallApi: CallApi,
    /**
     * The FnsApi service constructor.
     * @property {module:api/FnsApi}
     */
    FnsApi: FnsApi,
    /**
     * The LogApi service constructor.
     * @property {module:api/LogApi}
     */
    LogApi: LogApi,
    /**
     * The TriggersApi service constructor.
     * @property {module:api/TriggersApi}
     */
    TriggersApi: TriggersApi
  };

  return exports;
}));

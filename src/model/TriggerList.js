/**
 * fn
 * The open source serverless platform.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Trigger'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Trigger'));
  } else {
    // Browser globals (root is window)
    if (!root.FnJs) {
      root.FnJs = {};
    }
    root.FnJs.TriggerList = factory(root.FnJs.ApiClient, root.FnJs.Trigger);
  }
}(this, function(ApiClient, Trigger) {
  'use strict';




  /**
   * The TriggerList model module.
   * @module model/TriggerList
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>TriggerList</code>.
   * @alias module:model/TriggerList
   * @class
   * @param items {Array.<module:model/Trigger>} 
   */
  var exports = function(items) {
    var _this = this;


    _this['items'] = items;
  };

  /**
   * Constructs a <code>TriggerList</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TriggerList} obj Optional instance to populate.
   * @return {module:model/TriggerList} The populated <code>TriggerList</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('next_cursor')) {
        obj['next_cursor'] = ApiClient.convertToType(data['next_cursor'], 'String');
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ApiClient.convertToType(data['items'], [Trigger]);
      }
    }
    return obj;
  }

  /**
   * Cursor to send with subsequent request to receive the next page, if non-empty.
   * @member {String} next_cursor
   */
  exports.prototype['next_cursor'] = undefined;
  /**
   * @member {Array.<module:model/Trigger>} items
   */
  exports.prototype['items'] = undefined;



  return exports;
}));


